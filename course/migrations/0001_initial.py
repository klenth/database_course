# Generated by Django 3.2 on 2021-07-01 23:02

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='auth.user')),
                ('uuid', models.UUIDField(default=uuid.uuid1, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('sortable_name', models.CharField(blank=True, max_length=80)),
            ],
            options={
                'verbose_name': 'Instructor',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='auth.user')),
                ('uuid', models.UUIDField(default=uuid.uuid1, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('sortable_name', models.CharField(blank=True, max_length=80)),
                ('student_id', models.CharField(blank=True, default='', max_length=10)),
                ('is_dummy', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Student',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DummyStudent',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='course.student')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'People',
                'abstract': False,
            },
            bases=('course.student',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='course.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='course.student')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='courses', to='course.instructor'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(through='course.Enrollment', to='course.Student'),
        ),
        migrations.AddConstraint(
            model_name='enrollment',
            constraint=models.UniqueConstraint(fields=('student', 'course'), name='unique_student_course'),
        ),
        migrations.AddField(
            model_name='dummystudent',
            name='alter_ego',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='course.instructor'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('instructor', 'title'), name='unique_course_title'),
        ),
    ]
